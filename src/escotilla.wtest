import wollok.game.*
import enemigos.*
import jugador.*
import entorno.*
import gameManager.*
import recolectables.*
import hud.*

describe "Escotilla" {
	const escotilla = new Escotilla(position=game.at(0,0))
	method initialize() {
		game.clear()
		jugador.position(game.at(0,0))
		game.addVisual(jugador)
		game.addVisual(escotilla)
	}
	
	test "Si el jugador intenta abrir la escotilla sin la llave tira un error" {
		assert.throwsException({escotilla.abrir()})
		
	}
	
	test "Cuando el jugador abre la escotilla el nivel se completa"{
		jugador.agregar(llave)
		escotilla.abrir()
		
		assert.that(gameManager.estaCompletoElNivel())
	}
	
	test "El jugador pierde la llave al abrir la escotilla"{
		jugador.agregar(llave)
		assert.that(jugador.tieneItem(llave))
		escotilla.abrir()
		
		assert.notThat(jugador.tieneItem(llave))
	}
}


describe "Posion misteriosa" {
	method initialize() {
		game.clear()
		game.addVisual(jugador)
		game.addVisual(posionMisteriosa)
		game.addVisual(hud_HP)
		hud_HP.position(game.at(3,0))
		posionMisteriosa.position(game.at(1,0))
		
	}
	
	test "Posion se remueve al ser tocada" {
		assert.that(game.getObjectsIn(game.at(1,0)).contains(posionMisteriosa))
		posionMisteriosa.collide(jugador)
		assert.notThat(game.getObjectsIn(game.at(1,0)).contains(posionMisteriosa))
		
	}
	
	test "Posion cura al jugador" {
		jugador.bajarVida()
		assert.equals(2, jugador.vida())
		posionMisteriosa.curar()
		assert.equals(3, jugador.vida())
	}
	
}


